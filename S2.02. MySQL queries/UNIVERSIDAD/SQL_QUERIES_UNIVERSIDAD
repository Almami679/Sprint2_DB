
MySQL QUERIES UNIVERSIDAD


1. listado de alumnos por orden alfabetico partiendo el primer apellido

SELECT persona.apellido1, persona.apellido2, persona.nombre FROM universidad.persona WHERE tipo = 'alumno' ORDER BY persona.apellido1;


2. nombres y apellidos de los alumnos que no tienen telefono

SELECT persona.apellido1, persona.apellido2, persona.nombre FROM universidad.persona
WHERE tipo = 'alumno' AND persona.telefono IS NULL;


3. alumnos nacidos en los 1999

SELECT persona.apellido1, persona.apellido2, persona.nombre, persona.fecha_nacimiento FROM universidad.persona WHERE persona.tipo = 'alumno' AND persona.fecha_nacimiento >= '1999-01-01' AND persona.fecha_nacimiento < '2000-01-01';



4. profesores sin telefono y con nif con letra 'K'

SELECT persona.apellido1, persona.apellido2, persona.nombre, persona.nif FROM universidad.persona
WHERE persona.tipo = 'profesor' AND persona.telefono IS NULL AND persona.nif LIKE '%K';



5. asignaturas del primer quatrimetre del 3 curso del grado Idetificador=7

SELECT asignatura.nombre FROM universidad.asignatura WHERE cuatrimestre = 1 AND curso = 3 AND id_grado = 7;



6. profesores y departamento de la A-Z

SELECT persona.apellido1, persona.apellido2, persona.nombre, departamento.nombre FROM universidad.persona JOIN universidad.profesor ON persona.id = profesor.id_profesor JOIN universidad.departamento ON profesor.id_departamento = departamento.id WHERE persona.tipo = 'profesor' ORDER BY persona.apellido1,persona.apellido2,persona.nombre;



7. info del alumnno con NIF 26902806M.

SELECT CONCAT(persona.nombre,' ',persona.apellido1,'  ',persona.apellido2) AS 'Nombre alumno', asignatura.nombre, curso_escolar.anyo_inicio, curso_escolar.anyo_fin FROM alumno_se_matricula_asignatura JOIN universidad.persona ON alumno_se_matricula_asignatura.id_alumno = persona.id JOIN universidad.asignatura ON asignatura.id = alumno_se_matricula_asignatura.id_asignatura JOIN universidad.curso_escolar on universidad.curso_escolar.id = alumno_se_matricula_asignatura.id_curso_escolar WHERE persona.nif = '26902806M';



8. departamentos de profesores en el grado de ingenieria.

SELECT DISTINCT departamento.nombre FROM universidad.departamento JOIN universidad.profesor ON profesor.id_departamento = departamento.id JOIN universidad.asignatura ON asignatura.id_profesor = profesor.id_profesor JOIN universidad.grado ON grado.id = asignatura.id_grado WHERE universidad.grado.nombre = 'Grado en Ingeniería Informática (Plan 2015)';



9. alumnos matriculados entre el 2018-2019

SELECT DISTINCT persona.id, CONCAT(persona.nombre,' ',persona.apellido1,'  ',persona.apellido2) AS 'Nombre alumno', persona.nif FROM universidad.persona JOIN universidad.alumno_se_matricula_asignatura ON alumno_se_matricula_asignatura.id_alumno = persona.id JOIN universidad.curso_escolar ON alumno_se_matricula_asignatura.id_curso_escolar = curso_escolar.id WHERE curso_escolar.anyo_inicio >= 2018 AND curso_escolar.anyo_fin <= 2019;



QUERIES LEFT JOIN i RIGHT JOIN.


1. profesores y departamentos vinculados

SELECT CONCAT(persona.apellido1, '  ',persona.apellido2,'  ', persona.nombre) AS 'Profesor', departamento.nombre AS 'Departamento' FROM universidad.persona LEFT JOIN universidad.profesor ON profesor.id_profesor = persona.id LEFT JOIN universidad.departamento ON profesor.id_departamento = departamento.id WHERE persona.tipo = 'profesor' ORDER BY departamento.nombre, persona.apellido1, persona.apellido2, persona.nombre;



2.  profesores con departamento = NULL

SELECT CONCAT(persona.nombre,'  ',persona.apellido1,'  ',persona.apellido2) AS 'Profesor sin Departamento' FROM universidad.persona LEFT JOIN universidad.profesor ON profesor.id_profesor = persona.id WHERE persona.tipo = 'profesor' AND profesor.id_departamento IS NULL;



3. departamentos sin profesor

SELECT departamento.nombre AS 'Departamentos sin profesorado' FROM universidad.departamento LEFT JOIN universidad.profesor ON profesor.id_departamento = departamento.id WHERE profesor.id_profesor IS NULL;



4. profesores sin asignatura

SELECT CONCAT(persona.nombre,'  ', persona.apellido1,'  ', persona.apellido2) AS 'Profesorado sin asignatura' FROM universidad.persona JOIN universidad.profesor ON profesor.id_profesor = persona.id LEFT JOIN universidad.asignatura ON profesor.id_profesor = asignatura.id_profesor WHERE asignatura.id_profesor IS NULL;



5. asignaturas sin profesor

SELECT asignatura.nombre AS 'Asignaturas sin Profesor' FROM universidad.asignatura LEFT JOIN universidad.profesor ON asignatura.id_profesor = profesor.id_profesor WHERE asignatura.id_profesor IS NULL ORDER BY asignatura.nombre;



6. departamentos sin ninguna asignatura en ningun curso

SELECT DISTINCT departamento.nombre AS 'Departamentos sin ninguna imparticion por Curso' FROM universidad.departamento LEFT JOIN universidad.profesor ON departamento.id = profesor.id_departamento LEFT JOIN universidad.asignatura ON profesor.id_profesor = asignatura.id_profesor LEFT JOIN universidad.alumno_se_matricula_asignatura ON asignatura.id = alumno_se_matricula_asignatura.id_asignatura WHERE alumno_se_matricula_asignatura.id_asignatura IS NULL;



CONSULTAS DE RESUMEN

1. total de alumnos

SELECT COUNT(*) AS 'Alumnos Totales' FROM universidad.persona WHERE persona.tipo = 'alumno';



2. total de alumnos nacidos en el 1999

SELECT COUNT(*) AS 'Alumnos Totales' FROM universidad.persona WHERE persona.tipo = 'alumno' AND persona.fecha_nacimiento >= '1999-01-01' AND persona.fecha_nacimiento < '2000-01-01';



3. departamentos con total de profesores en orden ascendente

SELECT departamento.nombre, COUNT(profesor.id_profesor) AS 'Profesores Totales' FROM universidad.profesor JOIN universidad.departamento ON profesor.id_departamento = departamento.id GROUP BY departamento.nombre ORDER BY COUNT(*) DESC;



4. Listado de departamentos y sus profesores, tengan o no 

SELECT departamento.nombre AS 'Departamento', COUNT(profesor.id_profesor) AS 'Profesores' FROM universidad.departamento LEFT JOIN universidad.profesor ON departamento.id = profesor.id_departamento GROUP BY departamento.nombre ORDER BY COUNT(*) DESC;



5. grados y asignaturas (aunque no las tengan)

SELECT grado.nombre AS 'Grado', COUNT(asignatura.id) AS 'Asignaturas Totales' FROM universidad.grado LEFT JOIN universidad.asignatura ON grado.id = asignatura.id_grado GROUP BY grado.nombre ORDER BY COUNT(*) DESC;



6. grados existentes y numero de asignaturas (los que tienen mas de 40)

SELECT grado.nombre AS 'Grado', COUNT(asignatura.id) AS 'Asignaturas Totales' FROM universidad.grado LEFT JOIN universidad.asignatura ON grado.id = asignatura.id_grado GROUP BY grado.nombre HAVING COUNT(asignatura.id) > 40 ORDER BY COUNT(*) DESC;



7. listado de grados, total de creditos y tipo de asignatura

SELECT grado.nombre AS 'Grado', asignatura.tipo AS 'Tipo assignatura', SUM(asignatura.creditos) AS 'Total de Creditos/asignatura' FROM universidad.grado JOIN universidad.asignatura ON grado.id = asignatura.id_grado GROUP BY asignatura.tipo, grado.nombre;



8. total de alumnos matriculados por año de matriculacion 

SELECT DISTINCT curso_escolar.anyo_inicio As 'Matricula', COUNT(DISTINCT alumno_se_matricula_asignatura.id_alumno) AS 'Total de plazas matriculadas' FROM universidad.alumno_se_matricula_asignatura JOIN universidad.curso_escolar ON alumno_se_matricula_asignatura.id_curso_escolar = curso_escolar.id GROUP BY curso_escolar.anyo_inicio;



9. profesor y numero de asignaturas que imparte

SELECT persona.id, persona.nombre, persona.apellido1 AS 'Primer apellido', persona.apellido2 AS 'Segundo apellido', COUNT(asignatura.id) AS 'Asignaturas impartidas' FROM universidad.persona JOIN universidad.profesor ON persona.id = profesor.id_profesor LEFT JOIN universidad.asignatura ON profesor.id_profesor = asignatura.id_profesor GROUP BY persona.id, persona.nombre, persona.apellido1, persona.apellido2 ORDER BY COUNT(asignatura.id) DESC, persona.nombre ASC;



10. alumno mas joven

SELECT * from persona where persona.tipo = 'alumno' ORDER BY persona.fecha_nacimiento DESC LIMIT 1;



11. profesores con departamento sin asignatura

SELECT CONCAT(persona.nombre, '  ',persona.apellido1,'  ',persona.apellido2,'    (Dto. ',departamento.nombre,')') AS 'Profesores sin asignaturas asignadas' FROM universidad.persona JOIN universidad.profesor ON persona.id = profesor.id_profesor JOIN universidad.departamento ON departamento.id = profesor.id_departamento LEFT JOIN universidad.asignatura ON profesor.id_profesor = asignatura.id_profesor WHERE profesor.id_departamento IS NOT NULL AND asignatura.id IS NULL;